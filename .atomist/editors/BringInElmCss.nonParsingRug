@tag "elm"
@description "Generate CSS from Elm code"
editor BringInElmCss

with project p
  begin
    do merge 'MainCss.elm' to 'src/MainCss.elm'
    do merge 'Stylesheets.elm' to 'src/Stylesheets.elm'
  end

AddDependency package="rtfeldman/elm-css" version="5.0.0"
AddLinkToHeader stylesheet="elm-styles.css"
AddCssBuildStep stylesheet="elm-styles.css"

@description "Add a dependency to elm-package.json"
editor AddDependency

  @description "Package to add"
  @validInput "githubOrg/repoName"
  param package: .*

  @description "minimum version number"
  @validInput "semantic version"
  param version: @semantic_version

  with package.json
    addDependency package version

@description "Add a stylesheet link to the header of index.html"
editor AddLinkToHeader

   @description "relative path of the stylesheet"
   param stylesheet: .*

   let htmlGrammar = <
       PLACEHOLDER : [];
       expr : '\>' insert=PLACEHOLDER '</head\>';
   >

   with file f when name = "index.html"
   	with htmlGrammar
      with insert
        do setValue {"<link type=\"text/css\" href=\"" + stylesheet + "\" rel=\"stylesheet\"/>\n" }

@description "Create the CSS before compiling the Elm"
editor AddCssBuildStep

  @description "output file to hold the CSS"
  param stylesheet: .*

  let buildGrammar = <
      SOMETHING : 'target';
      PLACEHOLDER : [];
      expr : before=SOMETHING insert=PLACEHOLDER 'echo "Compiling..."';
  >

  with file f when name = "build"
    with buildGrammar
      with insert
        do setValue { "echo 'Building css...'\nelm-css -o target/" + stylesheet + " src/Stylesheets.elm\n" }
