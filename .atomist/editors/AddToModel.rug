@tag "elm"
@description "Adds a field to the model of an Elm beginner program"
editor AddToModel

@displayName "Field Name"
@maxLength 21
@description "Name of the new model field"
param field_name: [a-z][\w]*


@displayName "Field Type"
@description "Type of the new field"
@validInput "An Elm type"
param field_type: .*

@description "Initial value of the field"
@displayName "Initial Value"
@validInput "If this is a string, please include quotes"
param initial_value: .*


AddToRecordTypeAlias type_name="Model", module="Main"
AddToModelInitialization function_name="model", module="Main", field_value=initial_value


@description "Add a field to a record type alias"
editor AddToRecordTypeAlias

	@description "Where is this type alias"
	@displayName "Module Name"
	param module: .*

  @description "Name of the type alias to change"
  @displayName "Type alias Name"
  param type_name: [a-z][\w]*

  @displayName "Field Name"
  @description "Name of the new model field"
  param field_name: [a-z][\w]*


  @displayName "Field Type"
  @description "Type of the new field"
  @validInput "An Elm type"
  param field_type: .*

with file
  with elm.module when name = module
    with type.alias when name = type_name
      with recordType
        do add field_name field_type


@description "Add a field to a record type alias"
editor AddToModelInitialization

	@description "Elm module to modify"
	@displayName "Module Name"
	param module: .*

  @description "Name of the function that has a record value in it"
  @displayName "Function name"
  param function_name: [a-z][\w]*

  @displayName "Field Name"
  @description "Name of the new model field"
  param field_name: [a-z][\w]*


  @displayName "Field Value"
  @description "Populate the new field"
  @validInput "An Elm expression"
  param field_value: .*

with file
  with elm.module when name = module
    with function when name = function_name
      with recordValue
        do add field_name field_value
