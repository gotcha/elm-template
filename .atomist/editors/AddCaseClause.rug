@description "Add a new pattern to a case"
editor AddCaseClause

	@description "Elm module to modify"
	@displayName "Module Name"
	param module: [A-Z][\w]*

  @displayName "New Pattern"
  @description "new pattern the case can match"
  @validInput "A union type deconstructor"
  param new_pattern: .*

  @displayName "Result"
  @description "body of the new case clause"
  @validInput "An Elm expression"
  param body: .*

  @description "The variable being matched, to identify the right case clause"
	@default "msg"
	@optional
	param what_is_being_matched: .*

	@description "The function containing the case clause"
  @optional
	@default "update"
	param function_with_case_in_it: .*

with file
  with elm.module when name = module
    with function upd when name = function_with_case_in_it
      with case mustalias when matchAsString = what_is_being_matched
        do addClause new_pattern {
           /*if (upd.typeSpecification() == "Msg -> Model -> ( Model, Cmd Msg )" &&
					     body == "model") {
							  print("recognized advanced application");
								return "model ! []"
						 } else */
						 return body;
				}
